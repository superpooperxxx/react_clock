{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","intervalId","state","currentTime","Date","getCurrentTime","date","toUTCString","slice","this","window","setInterval","setState","console","info","prevProps","oldName","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","nameChangingInterval","hasClock","clockName","handleLeftClick","handleRightClick","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"wOAWaA,EAAb,4MACEC,WAAa,EADf,EAGEC,MAAyB,CACvBC,YAAa,IAAIC,MAJrB,EA4BEC,eAAiB,SAACC,GAAD,OAAgBA,EAAKC,cAAcC,OAAO,IAAK,IA5BlE,uDAOE,WAAqB,IAAD,OAClBC,KAAKR,WAAaS,OAAOC,aAAY,WACnC,EAAKC,SAAS,CAAET,YAAa,IAAIC,OAEjCM,OAAOG,QAAQC,KAAK,EAAKT,eAAe,EAAKH,MAAMC,gBAClD,OAZP,gCAeE,SAAmBY,GACjB,IAAcC,EAAYD,EAAlBE,KACAA,EAASR,KAAKS,MAAdD,KAEJD,IAAYC,GACdP,OAAOG,QAAQM,MAAf,uBAAqCH,EAArC,eAAmDC,MApBzD,kCAwBE,WACEP,OAAOU,cAAcX,KAAKR,cAzB9B,oBA8BE,WACE,IAAQgB,EAASR,KAAKS,MAAdD,KACAd,EAAgBM,KAAKP,MAArBC,YAER,OACE,sBAAKkB,UAAU,mBAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACIZ,KAAKJ,eAAeF,YA3ChC,GAA2BmB,aCP3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GAQX,IAAMG,EAAb,4MACEC,qBAAuB,EADzB,EAGE1B,MAAyB,CACvB2B,UAAU,EACVC,UAAW,WALf,EAuBEC,gBAAkB,WAChB,EAAKnB,SAAS,CAAEiB,UAAU,KAxB9B,EA2BEG,iBAAmB,SAACC,GAClBA,EAAMC,iBAEN,EAAKtB,SAAS,CAAEiB,UAAU,KA9B9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAe3B,KAAKuB,kBAE9CG,SAASC,iBAAiB,QAAS3B,KAAKsB,iBAExCtB,KAAKmB,qBAAuBlB,OAAOC,aAAY,WAC7C,EAAKC,SAAS,CAAEkB,UAAWP,QAC1B,QAfP,kCAkBE,WACEY,SAASE,oBAAoB,QAAS5B,KAAKsB,iBAC3CrB,OAAOU,cAAcX,KAAKmB,wBApB9B,oBAiCE,WACE,MAAgCnB,KAAKP,MAA7B2B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,qBAAKT,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,aAAd,yBACEQ,GAAY,cAAC,EAAD,CAAOZ,KAAMa,aAxCrC,GAAyBR,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.41fcb15f.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  currentTime: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  intervalId = 0;\n\n  state: Readonly<State> = {\n    currentTime: new Date(),\n  };\n\n  componentDidMount() {\n    this.intervalId = window.setInterval(() => {\n      this.setState({ currentTime: new Date() });\n\n      window.console.info(this.getCurrentTime(this.state.currentTime));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name: oldName } = prevProps;\n    const { name } = this.props;\n\n    if (oldName !== name) {\n      window.console.debug(`Renamed from ${oldName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.intervalId);\n  }\n\n  getCurrentTime = (date: Date) => date.toUTCString().slice(-12, -4);\n\n  render() {\n    const { name } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock App__clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          { this.getCurrentTime(currentTime) }\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  nameChangingInterval = 0;\n\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleRightClick);\n\n    document.addEventListener('click', this.handleLeftClick);\n\n    this.nameChangingInterval = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleLeftClick);\n    window.clearInterval(this.nameChangingInterval);\n  }\n\n  handleLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__content\">\n          <h1 className=\"App__title\">React clock</h1>\n          { hasClock && <Clock name={clockName} /> }\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}